# This is the CMakeCache file.
# For build in directory: /Users/konstantinbelakov/CLionProjects/bitocen/cmake-build-debug
# It was generated by CMake: /Applications/CLion.app/Contents/bin/cmake/mac/aarch64/bin/cmake
# You can edit this file to change values found and used by cmake.
# If you do not want to change any of the values, simply exit the editor.
# If you do want to change a value, simply edit, save, and exit the editor.
# The syntax for the file is as follows:
# KEY:TYPE=VALUE
# KEY is the name of a variable in the cache.
# TYPE is a hint to GUIs for the type of VALUE, DO NOT EDIT TYPE!.
# VALUE is the current value for the KEY.

########################
# EXTERNAL cache entries
########################

//Path to a program.
CMAKE_ADDR2LINE:FILEPATH=/opt/homebrew/opt/llvm/bin/llvm-addr2line

//Path to a program.
CMAKE_AR:FILEPATH=/usr/bin/ar

//Choose the type of build, options are: None Debug Release RelWithDebInfo
// MinSizeRel ...
CMAKE_BUILD_TYPE:STRING=Debug

//Enable colored diagnostics throughout.
CMAKE_COLOR_DIAGNOSTICS:BOOL=ON

//No help, variable specified on the command line.
CMAKE_CXX_COMPILER:UNINITIALIZED=/opt/homebrew/opt/llvm/bin/clang++

//LLVM archiver
CMAKE_CXX_COMPILER_AR:FILEPATH=/opt/homebrew/Cellar/llvm/18.1.8/bin/llvm-ar

//`clang-scan-deps` dependency scanner
CMAKE_CXX_COMPILER_CLANG_SCAN_DEPS:FILEPATH=/opt/homebrew/Cellar/llvm/18.1.8/bin/clang-scan-deps

//Generate index for LLVM archive
CMAKE_CXX_COMPILER_RANLIB:FILEPATH=/opt/homebrew/Cellar/llvm/18.1.8/bin/llvm-ranlib

//Flags used by the CXX compiler during all build types.
CMAKE_CXX_FLAGS:STRING=

//Flags used by the CXX compiler during DEBUG builds.
CMAKE_CXX_FLAGS_DEBUG:STRING=-g

//Flags used by the CXX compiler during MINSIZEREL builds.
CMAKE_CXX_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the CXX compiler during RELEASE builds.
CMAKE_CXX_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the CXX compiler during RELWITHDEBINFO builds.
CMAKE_CXX_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//No help, variable specified on the command line.
CMAKE_C_COMPILER:UNINITIALIZED=/opt/homebrew/opt/llvm/bin/clang

//LLVM archiver
CMAKE_C_COMPILER_AR:FILEPATH=/opt/homebrew/Cellar/llvm/18.1.8/bin/llvm-ar

//`clang-scan-deps` dependency scanner
CMAKE_C_COMPILER_CLANG_SCAN_DEPS:FILEPATH=/opt/homebrew/Cellar/llvm/18.1.8/bin/clang-scan-deps

//Generate index for LLVM archive
CMAKE_C_COMPILER_RANLIB:FILEPATH=/opt/homebrew/Cellar/llvm/18.1.8/bin/llvm-ranlib

//Flags used by the C compiler during all build types.
CMAKE_C_FLAGS:STRING=

//Flags used by the C compiler during DEBUG builds.
CMAKE_C_FLAGS_DEBUG:STRING=-g

//Flags used by the C compiler during MINSIZEREL builds.
CMAKE_C_FLAGS_MINSIZEREL:STRING=-Os -DNDEBUG

//Flags used by the C compiler during RELEASE builds.
CMAKE_C_FLAGS_RELEASE:STRING=-O3 -DNDEBUG

//Flags used by the C compiler during RELWITHDEBINFO builds.
CMAKE_C_FLAGS_RELWITHDEBINFO:STRING=-O2 -g -DNDEBUG

//Path to a program.
CMAKE_DLLTOOL:FILEPATH=/opt/homebrew/opt/llvm/bin/llvm-dlltool

//Flags used by the linker during all build types.
CMAKE_EXE_LINKER_FLAGS:STRING=

//Flags used by the linker during DEBUG builds.
CMAKE_EXE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during MINSIZEREL builds.
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during RELEASE builds.
CMAKE_EXE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during RELWITHDEBINFO builds.
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Enable/Disable output of compile commands during generation.
CMAKE_EXPORT_COMPILE_COMMANDS:BOOL=

//Value Computed by CMake.
CMAKE_FIND_PACKAGE_REDIRECTS_DIR:STATIC=/Users/konstantinbelakov/CLionProjects/bitocen/cmake-build-debug/CMakeFiles/pkgRedirects

//User executables (bin)
CMAKE_INSTALL_BINDIR:PATH=bin

//Read-only architecture-independent data (DATAROOTDIR)
CMAKE_INSTALL_DATADIR:PATH=

//Read-only architecture-independent data root (share)
CMAKE_INSTALL_DATAROOTDIR:PATH=share

//Documentation root (DATAROOTDIR/doc/PROJECT_NAME)
CMAKE_INSTALL_DOCDIR:PATH=

//C header files (include)
CMAKE_INSTALL_INCLUDEDIR:PATH=include

//Info documentation (DATAROOTDIR/info)
CMAKE_INSTALL_INFODIR:PATH=

//Object code libraries (lib)
CMAKE_INSTALL_LIBDIR:PATH=lib

//Program executables (libexec)
CMAKE_INSTALL_LIBEXECDIR:PATH=libexec

//Locale-dependent data (DATAROOTDIR/locale)
CMAKE_INSTALL_LOCALEDIR:PATH=

//Modifiable single-machine data (var)
CMAKE_INSTALL_LOCALSTATEDIR:PATH=var

//Man documentation (DATAROOTDIR/man)
CMAKE_INSTALL_MANDIR:PATH=

//Path to a program.
CMAKE_INSTALL_NAME_TOOL:FILEPATH=/usr/bin/install_name_tool

//C header files for non-gcc (/usr/include)
CMAKE_INSTALL_OLDINCLUDEDIR:PATH=/usr/include

//Install path prefix, prepended onto install directories.
CMAKE_INSTALL_PREFIX:PATH=/usr/local

//Run-time variable data (LOCALSTATEDIR/run)
CMAKE_INSTALL_RUNSTATEDIR:PATH=

//System admin executables (sbin)
CMAKE_INSTALL_SBINDIR:PATH=sbin

//Modifiable architecture-independent data (com)
CMAKE_INSTALL_SHAREDSTATEDIR:PATH=com

//Read-only single-machine data (etc)
CMAKE_INSTALL_SYSCONFDIR:PATH=etc

//Path to a program.
CMAKE_LINKER:FILEPATH=/usr/bin/ld

//No help, variable specified on the command line.
CMAKE_MAKE_PROGRAM:UNINITIALIZED=/Applications/CLion.app/Contents/bin/ninja/mac/aarch64/ninja

//Flags used by the linker during the creation of modules during
// all build types.
CMAKE_MODULE_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of modules during
// DEBUG builds.
CMAKE_MODULE_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of modules during
// MINSIZEREL builds.
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of modules during
// RELEASE builds.
CMAKE_MODULE_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of modules during
// RELWITHDEBINFO builds.
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_NM:FILEPATH=/opt/homebrew/opt/llvm/bin/llvm-nm

//Path to a program.
CMAKE_OBJCOPY:FILEPATH=/opt/homebrew/opt/llvm/bin/llvm-objcopy

//Path to a program.
CMAKE_OBJDUMP:FILEPATH=/opt/homebrew/opt/llvm/bin/llvm-objdump

//Build architectures for OSX
CMAKE_OSX_ARCHITECTURES:STRING=

//Minimum OS X version to target for deployment (at runtime); newer
// APIs weak linked. Set to empty string for default value.
CMAKE_OSX_DEPLOYMENT_TARGET:STRING=

//The product will be built against the headers and libraries located
// inside the indicated SDK.
CMAKE_OSX_SYSROOT:PATH=/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX14.5.sdk

//Value Computed by CMake
CMAKE_PROJECT_DESCRIPTION:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_HOMEPAGE_URL:STATIC=

//Value Computed by CMake
CMAKE_PROJECT_NAME:STATIC=bitocen

//Value Computed by CMake
CMAKE_PROJECT_VERSION:STATIC=3.10.0

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MAJOR:STATIC=3

//Value Computed by CMake
CMAKE_PROJECT_VERSION_MINOR:STATIC=10

//Value Computed by CMake
CMAKE_PROJECT_VERSION_PATCH:STATIC=0

//Value Computed by CMake
CMAKE_PROJECT_VERSION_TWEAK:STATIC=

//Path to a program.
CMAKE_RANLIB:FILEPATH=/opt/homebrew/opt/llvm/bin/llvm-ranlib

//Path to a program.
CMAKE_READELF:FILEPATH=/opt/homebrew/opt/llvm/bin/llvm-readelf

//Flags used by the linker during the creation of shared libraries
// during all build types.
CMAKE_SHARED_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of shared libraries
// during DEBUG builds.
CMAKE_SHARED_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of shared libraries
// during MINSIZEREL builds.
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELEASE builds.
CMAKE_SHARED_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of shared libraries
// during RELWITHDEBINFO builds.
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//If set, runtime paths are not added when installing shared libraries,
// but are added when building.
CMAKE_SKIP_INSTALL_RPATH:BOOL=NO

//If set, runtime paths are not added when using shared libraries.
CMAKE_SKIP_RPATH:BOOL=NO

//Flags used by the linker during the creation of static libraries
// during all build types.
CMAKE_STATIC_LINKER_FLAGS:STRING=

//Flags used by the linker during the creation of static libraries
// during DEBUG builds.
CMAKE_STATIC_LINKER_FLAGS_DEBUG:STRING=

//Flags used by the linker during the creation of static libraries
// during MINSIZEREL builds.
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL:STRING=

//Flags used by the linker during the creation of static libraries
// during RELEASE builds.
CMAKE_STATIC_LINKER_FLAGS_RELEASE:STRING=

//Flags used by the linker during the creation of static libraries
// during RELWITHDEBINFO builds.
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO:STRING=

//Path to a program.
CMAKE_STRIP:FILEPATH=/usr/bin/strip

//Path to a program.
CMAKE_TAPI:FILEPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/tapi

//If this value is on, makefiles will be generated without the
// .SILENT directive, and all commands will be echoed to the console
// during the make.  This is useful for debugging only. With Visual
// Studio IDE projects all commands are done without /nologo.
CMAKE_VERBOSE_MAKEFILE:BOOL=FALSE

//Value Computed by CMake
MyProject_BINARY_DIR:STATIC=/Users/konstantinbelakov/CLionProjects/bitocen/cmake-build-debug/src/tests

//Value Computed by CMake
MyProject_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
MyProject_SOURCE_DIR:STATIC=/Users/konstantinbelakov/CLionProjects/bitocen/src/tests

//Arguments to supply to pkg-config
PKG_CONFIG_ARGN:STRING=

//pkg-config executable
PKG_CONFIG_EXECUTABLE:FILEPATH=/opt/homebrew/bin/pkg-config

//Enable AVX-512 instructions (only affects processors and compilers
// with AVX-512 support).
SIMDJSON_AVX512_ALLOWED:BOOL=ON

//Allow usage of bash within CMake
SIMDJSON_BASH:BOOL=ON

//Build simdjson_static library along with simdjson
SIMDJSON_BUILD_STATIC_LIB:BOOL=OFF

//Select the implementation that will be used for user code. Defaults
// to the most universal implementation in SIMDJSON_IMPLEMENTATION
// (in the order fallback;westmere;haswell;icelake;arm64;ppc64)
// if specified; otherwise, by default the compiler will pick the
// best implementation that can always be selected given the compiler
// flags.
SIMDJSON_BUILTIN_IMPLEMENTATION:STRING=

//Check for the end of the input buffer. The setting is unnecessary
// since we require padding of the inputs. You should expect tests
// to fail with this option turned on.
SIMDJSON_CHECK_EOF:BOOL=OFF

//the C++ standard to use for simdjson
SIMDJSON_CXX_STANDARD:STRING=17

//Enable development-time aids, such as checks for incorrect API
// usage. Enabled by default in DEBUG.
SIMDJSON_DEVELOPMENT_CHECKS:BOOL=OFF

//Disables deprecated APIs
SIMDJSON_DISABLE_DEPRECATED_API:BOOL=OFF

//Link with thread support
SIMDJSON_ENABLE_THREADS:BOOL=ON

//Enable simdjson's exception-throwing interface
SIMDJSON_EXCEPTIONS:BOOL=ON

//Semicolon-separated list of implementations to exclude (icelake/haswell/westmere/arm64/ppc64/fallback).
// By default, excludes any implementations that are unsupported
// at compile time or cannot be selected at runtime.
SIMDJSON_EXCLUDE_IMPLEMENTATION:STRING=

//Set _GLIBCXX_ASSERTIONS
SIMDJSON_GLIBCXX_ASSERTIONS:BOOL=OFF

//Semicolon-separated list of implementations to include (fallback;westmere;haswell;icelake;arm64;ppc64).
// If this is not set, any implementations that are supported at
// compile time and may be selected at runtime will be included.
SIMDJSON_IMPLEMENTATION:STRING=

//Include the arm64 implementation
SIMDJSON_IMPLEMENTATION_ARM64:BOOL=ON

//Include the fallback implementation
SIMDJSON_IMPLEMENTATION_FALLBACK:BOOL=ON

//Include the haswell implementation
SIMDJSON_IMPLEMENTATION_HASWELL:BOOL=ON

//Include the icelake implementation
SIMDJSON_IMPLEMENTATION_ICELAKE:BOOL=ON

//Include the ppc64 implementation
SIMDJSON_IMPLEMENTATION_PPC64:BOOL=ON

//Include the westmere implementation
SIMDJSON_IMPLEMENTATION_WESTMERE:BOOL=ON

//CMake package config location relative to the install prefix
SIMDJSON_INSTALL_CMAKEDIR:STRING=lib/cmake/simdjson

//simdjson library soversion
SIMDJSON_LIB_SOVERSION:STRING=23

//simdjson library version
SIMDJSON_LIB_VERSION:STRING=23.0.0

//Sanitize addresses
SIMDJSON_SANITIZE:BOOL=OFF

//Sanitize memory
SIMDJSON_SANITIZE_MEMORY:BOOL=OFF

//Sanitize undefined behavior
SIMDJSON_SANITIZE_UNDEFINED:BOOL=OFF

//SKIP UTF8 VALIDATION.
SIMDJSON_SKIPUTF8VALIDATION:BOOL=OFF

//the SIMDJSON_STRUCTURAL_INDEXER_STEP variable
SIMDJSON_STRUCTURAL_INDEXER_STEP:STRING=

//Use the libc++ library
SIMDJSON_USE_LIBCPP:BOOL=OFF

//Enable verbose logging for internal simdjson library development.
SIMDJSON_VERBOSE_LOGGING:BOOL=OFF

//Under Visual Studio, add Zi to the compile flag and DEBUG to
// the link file to add debugging information to the release build
// for easier profiling inside tools like VTune
SIMDJSON_VISUAL_STUDIO_BUILD_WITH_DEBUG_INFO_FOR_PROFILING:BOOL=OFF

//Value Computed by CMake
bitocen_BINARY_DIR:STATIC=/Users/konstantinbelakov/CLionProjects/bitocen/cmake-build-debug/src/tests/json

//Value Computed by CMake
bitocen_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
bitocen_SOURCE_DIR:STATIC=/Users/konstantinbelakov/CLionProjects/bitocen/src/tests/json

//Dependencies for the target
json_LIB_DEPENDS:STATIC=general;simdjson::simdjson;

//Path to a library.
pkgcfg_lib_SIMDJSON_simdjson:FILEPATH=/opt/homebrew/Cellar/simdjson/3.10.0/lib/libsimdjson.dylib

//Value Computed by CMake
simdjson_BINARY_DIR:STATIC=/Users/konstantinbelakov/CLionProjects/bitocen/cmake-build-debug/libs/simdjson

//Value Computed by CMake
simdjson_IS_TOP_LEVEL:STATIC=OFF

//Value Computed by CMake
simdjson_SOURCE_DIR:STATIC=/Users/konstantinbelakov/CLionProjects/bitocen/libs/simdjson


########################
# INTERNAL cache entries
########################

//ADVANCED property for variable: CMAKE_ADDR2LINE
CMAKE_ADDR2LINE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_AR
CMAKE_AR-ADVANCED:INTERNAL=1
//This is the directory where this CMakeCache.txt was created
CMAKE_CACHEFILE_DIR:INTERNAL=/Users/konstantinbelakov/CLionProjects/bitocen/cmake-build-debug
//Major version of cmake used to create the current loaded cache
CMAKE_CACHE_MAJOR_VERSION:INTERNAL=3
//Minor version of cmake used to create the current loaded cache
CMAKE_CACHE_MINOR_VERSION:INTERNAL=28
//Patch version of cmake used to create the current loaded cache
CMAKE_CACHE_PATCH_VERSION:INTERNAL=1
//Path to CMake executable.
CMAKE_COMMAND:INTERNAL=/Applications/CLion.app/Contents/bin/cmake/mac/aarch64/bin/cmake
//Path to cpack program executable.
CMAKE_CPACK_COMMAND:INTERNAL=/Applications/CLion.app/Contents/bin/cmake/mac/aarch64/bin/cpack
//Path to ctest program executable.
CMAKE_CTEST_COMMAND:INTERNAL=/Applications/CLion.app/Contents/bin/cmake/mac/aarch64/bin/ctest
//ADVANCED property for variable: CMAKE_CXX_COMPILER
CMAKE_CXX_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_COMPILER_AR
CMAKE_CXX_COMPILER_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_COMPILER_CLANG_SCAN_DEPS
CMAKE_CXX_COMPILER_CLANG_SCAN_DEPS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_COMPILER_RANLIB
CMAKE_CXX_COMPILER_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS
CMAKE_CXX_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_DEBUG
CMAKE_CXX_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_MINSIZEREL
CMAKE_CXX_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELEASE
CMAKE_CXX_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_CXX_FLAGS_RELWITHDEBINFO
CMAKE_CXX_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER
CMAKE_C_COMPILER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER_AR
CMAKE_C_COMPILER_AR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER_CLANG_SCAN_DEPS
CMAKE_C_COMPILER_CLANG_SCAN_DEPS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_COMPILER_RANLIB
CMAKE_C_COMPILER_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS
CMAKE_C_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_DEBUG
CMAKE_C_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_MINSIZEREL
CMAKE_C_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELEASE
CMAKE_C_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_C_FLAGS_RELWITHDEBINFO
CMAKE_C_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_DLLTOOL
CMAKE_DLLTOOL-ADVANCED:INTERNAL=1
//Executable file format
CMAKE_EXECUTABLE_FORMAT:INTERNAL=MACHO
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS
CMAKE_EXE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_DEBUG
CMAKE_EXE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_MINSIZEREL
CMAKE_EXE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELEASE
CMAKE_EXE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_EXE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_EXPORT_COMPILE_COMMANDS
CMAKE_EXPORT_COMPILE_COMMANDS-ADVANCED:INTERNAL=1
//Name of external makefile project generator.
CMAKE_EXTRA_GENERATOR:INTERNAL=
//Name of generator.
CMAKE_GENERATOR:INTERNAL=Ninja
//Generator instance identifier.
CMAKE_GENERATOR_INSTANCE:INTERNAL=
//Name of generator platform.
CMAKE_GENERATOR_PLATFORM:INTERNAL=
//Name of generator toolset.
CMAKE_GENERATOR_TOOLSET:INTERNAL=
//Test CMAKE_HAVE_LIBC_PTHREAD
CMAKE_HAVE_LIBC_PTHREAD:INTERNAL=1
//Source directory with the top level CMakeLists.txt file for this
// project
CMAKE_HOME_DIRECTORY:INTERNAL=/Users/konstantinbelakov/CLionProjects/bitocen
//ADVANCED property for variable: CMAKE_INSTALL_BINDIR
CMAKE_INSTALL_BINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATADIR
CMAKE_INSTALL_DATADIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DATAROOTDIR
CMAKE_INSTALL_DATAROOTDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_DOCDIR
CMAKE_INSTALL_DOCDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INCLUDEDIR
CMAKE_INSTALL_INCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_INFODIR
CMAKE_INSTALL_INFODIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBDIR
CMAKE_INSTALL_LIBDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LIBEXECDIR
CMAKE_INSTALL_LIBEXECDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALEDIR
CMAKE_INSTALL_LOCALEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_LOCALSTATEDIR
CMAKE_INSTALL_LOCALSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_MANDIR
CMAKE_INSTALL_MANDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_NAME_TOOL
CMAKE_INSTALL_NAME_TOOL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_OLDINCLUDEDIR
CMAKE_INSTALL_OLDINCLUDEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_RUNSTATEDIR
CMAKE_INSTALL_RUNSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SBINDIR
CMAKE_INSTALL_SBINDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SHAREDSTATEDIR
CMAKE_INSTALL_SHAREDSTATEDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_INSTALL_SYSCONFDIR
CMAKE_INSTALL_SYSCONFDIR-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_LINKER
CMAKE_LINKER-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS
CMAKE_MODULE_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_DEBUG
CMAKE_MODULE_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL
CMAKE_MODULE_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELEASE
CMAKE_MODULE_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_MODULE_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_NM
CMAKE_NM-ADVANCED:INTERNAL=1
//number of local generators
CMAKE_NUMBER_OF_MAKEFILES:INTERNAL=6
//ADVANCED property for variable: CMAKE_OBJCOPY
CMAKE_OBJCOPY-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_OBJDUMP
CMAKE_OBJDUMP-ADVANCED:INTERNAL=1
//Platform information initialized
CMAKE_PLATFORM_INFO_INITIALIZED:INTERNAL=1
//ADVANCED property for variable: CMAKE_RANLIB
CMAKE_RANLIB-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_READELF
CMAKE_READELF-ADVANCED:INTERNAL=1
//Path to CMake installation.
CMAKE_ROOT:INTERNAL=/Applications/CLion.app/Contents/bin/cmake/mac/aarch64/share/cmake-3.28
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS
CMAKE_SHARED_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_DEBUG
CMAKE_SHARED_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL
CMAKE_SHARED_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELEASE
CMAKE_SHARED_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_SHARED_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_INSTALL_RPATH
CMAKE_SKIP_INSTALL_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_SKIP_RPATH
CMAKE_SKIP_RPATH-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS
CMAKE_STATIC_LINKER_FLAGS-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_DEBUG
CMAKE_STATIC_LINKER_FLAGS_DEBUG-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL
CMAKE_STATIC_LINKER_FLAGS_MINSIZEREL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELEASE
CMAKE_STATIC_LINKER_FLAGS_RELEASE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO
CMAKE_STATIC_LINKER_FLAGS_RELWITHDEBINFO-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_STRIP
CMAKE_STRIP-ADVANCED:INTERNAL=1
//ADVANCED property for variable: CMAKE_TAPI
CMAKE_TAPI-ADVANCED:INTERNAL=1
//uname command
CMAKE_UNAME:INTERNAL=/usr/bin/uname
//ADVANCED property for variable: CMAKE_VERBOSE_MAKEFILE
CMAKE_VERBOSE_MAKEFILE-ADVANCED:INTERNAL=1
//Details about finding PkgConfig
FIND_PACKAGE_MESSAGE_DETAILS_PkgConfig:INTERNAL=[/opt/homebrew/bin/pkg-config][v0.29.2()]
//Details about finding Threads
FIND_PACKAGE_MESSAGE_DETAILS_Threads:INTERNAL=[TRUE][v()]
//Have symbol fork
HAVE_POSIX_FORK:INTERNAL=1
//Have symbol wait
HAVE_POSIX_WAIT:INTERNAL=1
//ADVANCED property for variable: PKG_CONFIG_ARGN
PKG_CONFIG_ARGN-ADVANCED:INTERNAL=1
//ADVANCED property for variable: PKG_CONFIG_EXECUTABLE
PKG_CONFIG_EXECUTABLE-ADVANCED:INTERNAL=1
RAPIDJSON_CFLAGS:INTERNAL=-I/opt/homebrew/Cellar/rapidjson/1.1.0/include
RAPIDJSON_CFLAGS_I:INTERNAL=
RAPIDJSON_CFLAGS_OTHER:INTERNAL=
RAPIDJSON_FOUND:INTERNAL=1
RAPIDJSON_INCLUDEDIR:INTERNAL=/opt/homebrew/Cellar/rapidjson/1.1.0/include
RAPIDJSON_INCLUDE_DIRS:INTERNAL=/opt/homebrew/Cellar/rapidjson/1.1.0/include
RAPIDJSON_LDFLAGS:INTERNAL=
RAPIDJSON_LDFLAGS_OTHER:INTERNAL=
RAPIDJSON_LIBDIR:INTERNAL=
RAPIDJSON_LIBRARIES:INTERNAL=
RAPIDJSON_LIBRARY_DIRS:INTERNAL=
RAPIDJSON_LIBS:INTERNAL=
RAPIDJSON_LIBS_L:INTERNAL=
RAPIDJSON_LIBS_OTHER:INTERNAL=
RAPIDJSON_LIBS_PATHS:INTERNAL=
RAPIDJSON_MODULE_NAME:INTERNAL=rapidjson
RAPIDJSON_PREFIX:INTERNAL=
RAPIDJSON_STATIC_CFLAGS:INTERNAL=-I/opt/homebrew/Cellar/rapidjson/1.1.0/include
RAPIDJSON_STATIC_CFLAGS_I:INTERNAL=
RAPIDJSON_STATIC_CFLAGS_OTHER:INTERNAL=
RAPIDJSON_STATIC_INCLUDE_DIRS:INTERNAL=/opt/homebrew/Cellar/rapidjson/1.1.0/include
RAPIDJSON_STATIC_LDFLAGS:INTERNAL=
RAPIDJSON_STATIC_LDFLAGS_OTHER:INTERNAL=
RAPIDJSON_STATIC_LIBDIR:INTERNAL=
RAPIDJSON_STATIC_LIBRARIES:INTERNAL=
RAPIDJSON_STATIC_LIBRARY_DIRS:INTERNAL=
RAPIDJSON_STATIC_LIBS:INTERNAL=
RAPIDJSON_STATIC_LIBS_L:INTERNAL=
RAPIDJSON_STATIC_LIBS_OTHER:INTERNAL=
RAPIDJSON_STATIC_LIBS_PATHS:INTERNAL=
RAPIDJSON_VERSION:INTERNAL=1.1.0
RAPIDJSON_rapidjson_INCLUDEDIR:INTERNAL=
RAPIDJSON_rapidjson_LIBDIR:INTERNAL=
RAPIDJSON_rapidjson_PREFIX:INTERNAL=
RAPIDJSON_rapidjson_VERSION:INTERNAL=
SIMDJSON_CFLAGS:INTERNAL=-DSIMDJSON_THREADS_ENABLED=1;-I/opt/homebrew/Cellar/simdjson/3.10.0/include
SIMDJSON_CFLAGS_I:INTERNAL=
SIMDJSON_CFLAGS_OTHER:INTERNAL=-DSIMDJSON_THREADS_ENABLED=1
SIMDJSON_FOUND:INTERNAL=1
//ADVANCED property for variable: SIMDJSON_IMPLEMENTATION_ARM64
SIMDJSON_IMPLEMENTATION_ARM64-ADVANCED:INTERNAL=1
//ADVANCED property for variable: SIMDJSON_IMPLEMENTATION_FALLBACK
SIMDJSON_IMPLEMENTATION_FALLBACK-ADVANCED:INTERNAL=1
//ADVANCED property for variable: SIMDJSON_IMPLEMENTATION_HASWELL
SIMDJSON_IMPLEMENTATION_HASWELL-ADVANCED:INTERNAL=1
//ADVANCED property for variable: SIMDJSON_IMPLEMENTATION_ICELAKE
SIMDJSON_IMPLEMENTATION_ICELAKE-ADVANCED:INTERNAL=1
//ADVANCED property for variable: SIMDJSON_IMPLEMENTATION_PPC64
SIMDJSON_IMPLEMENTATION_PPC64-ADVANCED:INTERNAL=1
//ADVANCED property for variable: SIMDJSON_IMPLEMENTATION_WESTMERE
SIMDJSON_IMPLEMENTATION_WESTMERE-ADVANCED:INTERNAL=1
SIMDJSON_INCLUDEDIR:INTERNAL=/opt/homebrew/Cellar/simdjson/3.10.0/include
SIMDJSON_INCLUDE_DIRS:INTERNAL=/opt/homebrew/Cellar/simdjson/3.10.0/include
//ADVANCED property for variable: SIMDJSON_INSTALL_CMAKEDIR
SIMDJSON_INSTALL_CMAKEDIR-ADVANCED:INTERNAL=1
SIMDJSON_LDFLAGS:INTERNAL=-L/opt/homebrew/Cellar/simdjson/3.10.0/lib;-lsimdjson
SIMDJSON_LDFLAGS_OTHER:INTERNAL=
SIMDJSON_LIBDIR:INTERNAL=/opt/homebrew/Cellar/simdjson/3.10.0/lib
SIMDJSON_LIBRARIES:INTERNAL=simdjson
SIMDJSON_LIBRARY_DIRS:INTERNAL=/opt/homebrew/Cellar/simdjson/3.10.0/lib
SIMDJSON_LIBS:INTERNAL=
SIMDJSON_LIBS_L:INTERNAL=
SIMDJSON_LIBS_OTHER:INTERNAL=
SIMDJSON_LIBS_PATHS:INTERNAL=
SIMDJSON_MODULE_NAME:INTERNAL=simdjson
SIMDJSON_PREFIX:INTERNAL=/opt/homebrew/Cellar/simdjson/3.10.0
SIMDJSON_STATIC_CFLAGS:INTERNAL=-DSIMDJSON_THREADS_ENABLED=1;-I/opt/homebrew/Cellar/simdjson/3.10.0/include
SIMDJSON_STATIC_CFLAGS_I:INTERNAL=
SIMDJSON_STATIC_CFLAGS_OTHER:INTERNAL=-DSIMDJSON_THREADS_ENABLED=1
SIMDJSON_STATIC_INCLUDE_DIRS:INTERNAL=/opt/homebrew/Cellar/simdjson/3.10.0/include
SIMDJSON_STATIC_LDFLAGS:INTERNAL=-L/opt/homebrew/Cellar/simdjson/3.10.0/lib;-lsimdjson
SIMDJSON_STATIC_LDFLAGS_OTHER:INTERNAL=
SIMDJSON_STATIC_LIBDIR:INTERNAL=
SIMDJSON_STATIC_LIBRARIES:INTERNAL=simdjson
SIMDJSON_STATIC_LIBRARY_DIRS:INTERNAL=/opt/homebrew/Cellar/simdjson/3.10.0/lib
SIMDJSON_STATIC_LIBS:INTERNAL=
SIMDJSON_STATIC_LIBS_L:INTERNAL=
SIMDJSON_STATIC_LIBS_OTHER:INTERNAL=
SIMDJSON_STATIC_LIBS_PATHS:INTERNAL=
SIMDJSON_VERSION:INTERNAL=3.10.0
SIMDJSON_simdjson_INCLUDEDIR:INTERNAL=
SIMDJSON_simdjson_LIBDIR:INTERNAL=
SIMDJSON_simdjson_PREFIX:INTERNAL=
SIMDJSON_simdjson_VERSION:INTERNAL=
//CMAKE_INSTALL_PREFIX during last run
_GNUInstallDirs_LAST_CMAKE_INSTALL_PREFIX:INTERNAL=/usr/local
__pkg_config_arguments_RAPIDJSON:INTERNAL=REQUIRED;rapidjson
__pkg_config_arguments_SIMDJSON:INTERNAL=REQUIRED;simdjson
__pkg_config_checked_RAPIDJSON:INTERNAL=1
__pkg_config_checked_SIMDJSON:INTERNAL=1
//ADVANCED property for variable: pkgcfg_lib_SIMDJSON_simdjson
pkgcfg_lib_SIMDJSON_simdjson-ADVANCED:INTERNAL=1
prefix_result:INTERNAL=/opt/homebrew/Cellar/simdjson/3.10.0/lib

